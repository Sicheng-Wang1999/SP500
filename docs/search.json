[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "SP500",
    "section": "",
    "text": "1 Introduction\nThis project aims to unravel the mysteries and trends hidden behind the S&P 500 Index. The S&P 500, or Standard & Poor’s 500, represents a collection of 500 leading companies and takes up approximately 80% of available market capitalization. Taking Exploratory Data Analysis as our compass, we adventure through the vast financial landscape of historical returns, risks, and sectors within the index."
  },
  {
    "objectID": "index.html#why-explore-sp-500",
    "href": "index.html#why-explore-sp-500",
    "title": "SP500",
    "section": "1.1 Why Explore S&P 500",
    "text": "1.1 Why Explore S&P 500\nThe S&P 500 gives us a snapshot of how well the economy is doing. If just a few companies is not doing well on a single day, it doesn’t drag the index down as there are 500 companies. Thus, S&P 500 often serves as a benchmark for US stock markets, that people often compare with their portfolio with to assess the standing of performance and diversity of individual portfolio relative to the overall market. By exploring the SP500 index on its correlation with economic factors such as interest rates, and through breakdowns by location of headquarter or sector of individual stock. We hope to find hints on how to build the right portfolio at the right time."
  },
  {
    "objectID": "index.html#what-to-expect",
    "href": "index.html#what-to-expect",
    "title": "SP500",
    "section": "1.2 What to Expect",
    "text": "1.2 What to Expect\n\n1. Performance of Index v.s. individual stock\nWe are interested in seeing the trends (ups and downs, seasonality, significant milestones) of the S&P 500 Index within 5 years and its comparison with individual constituents of the index. Which subset of the pool outperforms the index.\n\n\n2. Sector/location v.s. Performance\nAfter locating the companies that have over/under index performance, we would like to investigate if that has any correlation with certain properties of the company including headquarter location and business sector.\n\n\n3. Resilience v.s. Performance\nIdentify bad times, and see how soon the economy recovers. Is it true that companies that can recover fast from bad economic situations will succeed in the future?\n\n\n4. Interest Rate/Unemployment Rate v.s. S&P 500 index\nHow are macroeconomic factors including Interest Rate/Unemployment Rate related to the S&P 500 index? Does low interest rate imply steady growth?"
  },
  {
    "objectID": "data.html#description",
    "href": "data.html#description",
    "title": "2  Data",
    "section": "2.1 Description",
    "text": "2.1 Description\n\nInterest rate data from 2022-2023 Daily interest rate data is collected by U.S Department of the Treasury and is downloaded as csv files. The data consists of 1 month rates to 30 year rates and is updated daily, note that since 10/18/2022 there are no 4 months interest rates.\n\n\n\nCode\nAPR22 = read.csv(\"daily-treasury-rates-2022.csv\")\nAPR23 = read.csv(\"daily-treasury-rates-2023.csv\")\nAPR = bind_rows(APR22,APR23)\nhead(APR)\n\n\n        Date X1.Mo X2.Mo X3.Mo X4.Mo X6.Mo X1.Yr X2.Yr X3.Yr X5.Yr X7.Yr X10.Yr\n1 12/30/2022  4.12  4.41  4.42  4.69  4.76  4.73  4.41  4.22  3.99  3.96   3.88\n2 12/29/2022  4.04  4.39  4.45  4.66  4.73  4.71  4.34  4.16  3.94  3.91   3.83\n3 12/28/2022  3.86  4.33  4.46  4.66  4.75  4.71  4.31  4.18  3.97  3.97   3.88\n4 12/27/2022  3.87  4.32  4.46  4.66  4.76  4.75  4.32  4.17  3.94  3.93   3.84\n5 12/23/2022  3.80  4.20  4.34  4.59  4.67  4.66  4.31  4.09  3.86  3.83   3.75\n6 12/22/2022  3.80  4.20  4.35  4.57  4.66  4.64  4.24  4.02  3.79  3.77   3.67\n  X20.Yr X30.Yr\n1   4.14   3.97\n2   4.09   3.92\n3   4.13   3.98\n4   4.10   3.93\n5   3.99   3.82\n6   3.91   3.73\n\n\nDownloaded sp500 portfolio from https://www.slickcharts.com/sp500 as sp500rank.xlsx\n\n\nCode\nsp500rank &lt;- read_excel(\"sp500rank.xlsx\")\nsp500rank_list = unlist(sp500rank['Symbol'])\ntop_105_symbols = sp500rank_list[1:105]\nlast_105_symbols = rev(rev(sp500rank_list)[1:105])\n\n\nThe stock symbols are then used to download 20 year daily movement from yahoo finance\n\n\nCode\noptions(\"getSymbols.warning4.0\"=FALSE)\noptions(\"getSymbols.yahoo.warning\"=FALSE)\ngetSymbols(top_105_symbols, from = '2003-10-30', to = \"2023-10-30\",warnings = FALSE)\n\n\n  [1] \"MSFT\"  \"AAPL\"  \"AMZN\"  \"NVDA\"  \"GOOGL\" \"META\"  \"GOOG\"  \"TSLA\"  \"UNH\"  \n [10] \"LLY\"   \"JPM\"   \"XOM\"   \"AVGO\"  \"V\"     \"JNJ\"   \"PG\"    \"MA\"    \"HD\"   \n [19] \"ADBE\"  \"COST\"  \"CVX\"   \"MRK\"   \"ABBV\"  \"PEP\"   \"KO\"    \"WMT\"   \"CRM\"  \n [28] \"NFLX\"  \"ACN\"   \"MCD\"   \"BAC\"   \"LIN\"   \"AMD\"   \"CSCO\"  \"TMO\"   \"INTC\" \n [37] \"ORCL\"  \"ABT\"   \"CMCSA\" \"DIS\"   \"PFE\"   \"WFC\"   \"INTU\"  \"VZ\"    \"PM\"   \n [46] \"DHR\"   \"AMGN\"  \"IBM\"   \"QCOM\"  \"TXN\"   \"COP\"   \"NOW\"   \"UNP\"   \"SPGI\" \n [55] \"NKE\"   \"GE\"    \"HON\"   \"CAT\"   \"BA\"    \"AMAT\"  \"NEE\"   \"LOW\"   \"RTX\"  \n [64] \"SBUX\"  \"T\"     \"BKNG\"  \"ELV\"   \"GS\"    \"ISRG\"  \"UPS\"   \"MDT\"   \"PLD\"  \n [73] \"BLK\"   \"TJX\"   \"BMY\"   \"LMT\"   \"SYK\"   \"DE\"    \"MS\"    \"MMC\"   \"MDLZ\" \n [82] \"AXP\"   \"PGR\"   \"AMT\"   \"LRCX\"  \"ADP\"   \"GILD\"  \"CB\"    \"ADI\"   \"ETN\"  \n [91] \"VRTX\"  \"CVS\"   \"C\"     \"REGN\"  \"PANW\"  \"CI\"    \"MU\"    \"SCHW\"  \"SNPS\" \n[100] \"ZTS\"   \"BSX\"   \"FI\"    \"CME\"   \"SO\"   \n\n\nCode\nfor (symbol in top_105_symbols) {\n  if (exists(symbol)) {\n    write.zoo(get(symbol), glue('data/{symbol}.csv'), sep = \",\")\n  }\n}\ngetSymbols(last_105_symbols, from = '2003-10-30', to = \"2023-10-30\",warnings = FALSE)\n\n\n  [1] \"K\"    \"TSN\"  \"AMCR\" \"POOL\" \"ESS\"  \"DPZ\"  \"ENPH\" \"CAG\"  \"MAS\"  \"CE\"  \n [11] \"PODD\" \"SYF\"  \"UAL\"  \"L\"    \"LNT\"  \"CFG\"  \"HST\"  \"NDSN\" \"MOS\"  \"LKQ\" \n [21] \"GEN\"  \"ZBRA\" \"LYV\"  \"IP\"   \"EVRG\" \"IPG\"  \"KIM\"  \"AES\"  \"JKHY\" \"SJM\" \n [31] \"ROL\"  \"TAP\"  \"APA\"  \"KEY\"  \"MGM\"  \"TRMB\" \"VTRS\" \"RVTY\" \"NRG\"  \"NI\"  \n [41] \"GL\"   \"PNR\"  \"CDAY\" \"TFX\"  \"REG\"  \"UDR\"  \"KMX\"  \"FFIV\" \"CRL\"  \"INCY\"\n [51] \"EMN\"  \"WRK\"  \"TECH\" \"CHRW\" \"CZR\"  \"CPT\"  \"HII\"  \"AOS\"  \"PEAK\" \"ETSY\"\n [61] \"HRL\"  \"QRVO\" \"ALLE\" \"MTCH\" \"JNPR\" \"HSIC\" \"AIZ\"  \"PAYC\" \"MKTX\" \"RHI\" \n [71] \"NWSA\" \"UHS\"  \"PNW\"  \"WYNN\" \"CPB\"  \"AAL\"  \"BWA\"  \"BXP\"  \"FOXA\" \"TPR\" \n [81] \"CTLT\" \"BBWI\" \"GNRC\" \"FRT\"  \"BEN\"  \"PARA\" \"XRAY\" \"FMC\"  \"BIO\"  \"IVZ\" \n [91] \"NCLH\" \"WHR\"  \"HAS\"  \"CMA\"  \"VFC\"  \"DVA\"  \"ZION\" \"RL\"   \"SEE\"  \"ALK\" \n[101] \"MHK\"  \"SEDG\" \"FOX\"  \"NWS\" \n\n\nCode\nfor (symbol in last_105_symbols) {\n  if (exists(symbol)) {\n    write.zoo(get(symbol), glue('data/{symbol}.csv'), sep = \",\")\n  }\n}\n\n\n\n\nCode\ngetSymbols('^GSPC', from = '2003-10-30', to = \"2023-10-30\",warnings = FALSE)\n\n\n[1] \"GSPC\"\n\n\nCode\nwrite.zoo(GSPC, 'data/GSPC.csv', sep = \",\")\n\n\nData collected:\n\n2022-2023 Daily interest rate data from US Treasury, by Sicheng.\nUp-to-date S&P500 portfolio data from https://www.slickcharts.com/sp500. The data is collected simply by copying the elements in the html table and paste into an excel sheet in xlsx. It has the rank, name, symbol, for each stock in the S&P500. This data helps us identify the stocks in S&P500 and how important they are by looking at the percentage each stock takes in the portfolio. The data is ranked by the current percentage and this helps us identify the important stocks and less important stocks in S&P500, allowing us to further explore individual stocks, by Shuai. A note is that there are more than 500 entries in S&P500 as some companies have more than one stock. For example, GOOGL and GOOG are both Google’s.\n20 years daily movement data from 2003-10-30 or as early as possible to 2023-10-27, for each stocks ranked in top 105 and each stocks ranked in last 105. The data is collected using tidyquant package and the source of data is Yahoo Finance according to the package. They are then written into separate csv files store under the data directory. For each stock, the csv file contains the date, open, close, highest, and lowest price, as well as the trade volume and adjusted price. Collecting these stock data allows us to explore the individual stocks performance and explore the differences in performance between the most important stocks and the least important stocks, as well as how the stocks are different. For example, are the less important stocks smaller and do they have smaller trade volume? or do they perform worse or not? by Shuai. A note is that the codes are commented out because downloading the data from Yahoo takes an extensive amount of time. Local data is csv will be available to use.\n20 years daily movement data from 2003-10-30 to 2023-10-27 for S&P500. It is sourced, formatted, and stored the same way as the individual stock data. Using this data, we can compare the individual stock performance with the S&P500 index and explore. For example, is there any stock that actually moves against S&P500, or are there any outliers? by Shuai."
  },
  {
    "objectID": "data.html#missing-value-analysis",
    "href": "data.html#missing-value-analysis",
    "title": "2  Data",
    "section": "2.2 Missing value analysis",
    "text": "2.2 Missing value analysis\n\n\nCode\ndf &lt;- APR |&gt; column_to_rownames(\"Date\")\ndf &lt;- df |&gt; rownames_to_column(\"id\") |&gt; pivot_longer(cols = -id) |&gt; mutate(missing = ifelse(is.na(value),\"yes\",\"no\"))\ndf &lt;- df |&gt; mutate(id = as.Date(id, format = \"%m/%d/%Y\"))\nggplot(df, aes(x=name, y=id, fill = missing)) + \n    geom_tile()\n\n\n\n\n\nBefore 10/18/2022 there are no 4 months interest rates.\n\n\nCode\nstart_date &lt;- as.Date(\"2003-10-29\")\nend_date &lt;- as.Date(\"2023-11-05\")\ndate_sequence &lt;- seq(start_date, end_date, by = \"1 day\")\n\ndf &lt;- data.frame(Date = date_sequence)\ndf$Week_Start_Date &lt;- floor_date(df$Date, unit = \"week\")\nunique_week_start_dates &lt;- unique(df$Week_Start_Date)\n\ntemplate_df &lt;- data.frame(\n  Sunday = rep(0, length(unique_week_start_dates)),\n  Monday = rep(0, length(unique_week_start_dates)),\n  Tuesday = rep(0, length(unique_week_start_dates)),\n  Wednesday = rep(0, length(unique_week_start_dates)),\n  Thursday = rep(0, length(unique_week_start_dates)),\n  Friday = rep(0, length(unique_week_start_dates)),\n  Saturday = rep(0, length(unique_week_start_dates))\n)\n\nresult_df &lt;- cbind.data.frame(Week_Start_Date = unique_week_start_dates, template_df)\n\nresult_df &lt;- result_df %&gt;%\n  select(Week_Start_Date, Sunday, Monday, Tuesday, Wednesday, Thursday, Friday, Saturday)\n\n\n\n\nCode\nsp500_missing &lt;- result_df\nsp500_dates &lt;- as.Date(unlist(read.csv(\"data/GSPC.csv\")['Index']))\nfor (date in sp500_dates) {\n    date &lt;- as.Date(date)\n    week_start &lt;- floor_date(date, unit = \"week\")\n    day_of_week &lt;- weekdays(date)\n    day_of_week &lt;- match(day_of_week, c(\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"))\n    sp500_missing[sp500_missing$Week_Start_Date == week_start, day_of_week] &lt;- 1\n}\n\n\n\n\nCode\nmeta_missing &lt;- result_df\nmeta_dates &lt;- as.Date(unlist(read.csv(\"data/META.csv\")['Index']))\nfor (date in meta_dates) {\n    date &lt;- as.Date(date)\n    week_start &lt;- floor_date(date, unit = \"week\")\n    day_of_week &lt;- weekdays(date)\n    day_of_week &lt;- match(day_of_week, c(\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"))\n    meta_missing[meta_missing$Week_Start_Date == week_start, day_of_week] &lt;- 1\n}\n\n\n\n\nCode\nlong_df &lt;- pivot_longer(sp500_missing, cols = -Week_Start_Date, names_to = \"Day\", values_to = \"Value\")\n\nggplot(long_df, aes(x = Week_Start_Date, y = Day, fill = factor(Value))) +\n  geom_tile() +\n  scale_fill_manual(values = c(\"1\" = \"cornflowerblue\", \"0\" = \"red\")) +\n  labs(fill = \"Value\", x = \"Week Start Date\", y = \"Day of the Week\", title = \"S&P500\") +\n  coord_flip()\n\n\n\n\n\n\n\nCode\nlong_df &lt;- pivot_longer(meta_missing, cols = -Week_Start_Date, names_to = \"Day\", values_to = \"Value\")\n\nggplot(long_df, aes(x = Week_Start_Date, y = Day, fill = factor(Value))) +\n  geom_tile() +\n  scale_fill_manual(values = c(\"1\" = \"cornflowerblue\", \"0\" = \"red\")) +\n  labs(fill = \"Value\", x = \"Week Start Date\", y = \"Day of the Week\", title = \"META\") +\n  coord_flip()\n\n\n\n\n\nThere is no missing value in the stock data. However, due to some stocks entering the market late, earlier data does not exist for those stocks.\nWhile there is no missing data, market closes during holidays, so some dates will miss, but the data from Yahoo is accurate to use."
  }
]